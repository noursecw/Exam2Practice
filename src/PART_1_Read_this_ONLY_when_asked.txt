Here is one way to solve the problem.

Unless this  read_me  makes it very clear how to modify your existing
code to be a correct solution, replace your code by copy-pasting
the following into your code and then replacing each 'XXX'
by code that does what the pseudo-code suggests. 
        
        # Determine how much space is available for the new contents,
        # and then how many characters of the additional_contents
        # can be appended to this Box's contents:
        
        space = 'XXX'
        number_of_characters_to_append = 'XXX'

        # Build up a string that is the characters to append
        # (that is, those that will fit into this Box).
        # Then append that string to this Box's contents:
        
        stuff_to_add = 'XXX'
        # Put a LOOP HERE to build up  stuff_to_add
        self.contents = 'XXX'

        # Build up a string that is the characters that were NOT
        # appended, by starting at the place where the previous loop
        # left off and continuing to the end of the additional_contents.
        # This will be a loop that goes NO times if the entire
        # additional_contents fits into this Box's contents:
        
        stuff_to_return = 'XXX'
        # Put a LOOP HERE to build up  stuff_to_return

        # Return the result from the previous loop:
        
        return 'XXX'

        li = len(additional_contents) + 5
        lf = self.volume
        str = 'Hello' + additional_contents
        s = ''
        t = ''
        for k in range(lf, li - 1):
            s += str[k]
        for k in range(lf):
            t += str[k]
        self.contents = t
        return s